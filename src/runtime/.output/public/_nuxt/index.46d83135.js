import{a as M,r as k,b as N,e as A,w as T,u as O,f as $,h as j,o as E,i as z,t as F,j as H,k as C,l as R,m as B}from"./entry.9e8397d0.js";const S=()=>null;function V(...i){var h,_,m,v,D,b,w,g,u;const s=typeof i[i.length-1]=="string"?i.pop():void 0;typeof i[0]!="string"&&i.unshift(s);let[a,c,e={}]=i;if(typeof a!="string")throw new TypeError("[nuxt] [asyncData] key must be a string.");if(typeof c!="function")throw new TypeError("[nuxt] [asyncData] handler must be a function.");e.server=(h=e.server)!=null?h:!0,e.default=(_=e.default)!=null?_:S,e.defer&&console.warn("[useAsyncData] `defer` has been renamed to `lazy`. Support for `defer` will be removed in RC."),e.lazy=(v=(m=e.lazy)!=null?m:e.defer)!=null?v:!1,e.initialCache=(D=e.initialCache)!=null?D:!0,e.immediate=(b=e.immediate)!=null?b:!0;const t=M(),d=()=>(t.isHydrating||e.initialCache)&&t.payload.data[a]!==void 0;t._asyncData[a]||(t._asyncData[a]={data:k(d()?t.payload.data[a]:(g=(w=e.default)==null?void 0:w.call(e))!=null?g:null),pending:k(!d()),error:k((u=t.payload._errors[a])!=null?u:null)});const n={...t._asyncData[a]};n.refresh=n.execute=(l={})=>{if(t._asyncDataPromises[a]){if(l.dedupe===!1)return t._asyncDataPromises[a];t._asyncDataPromises[a].cancelled=!0}if(l._initial&&d())return t.payload.data[a];n.pending.value=!0;const o=new Promise((r,f)=>{try{r(c(t))}catch(x){f(x)}}).then(r=>{if(o.cancelled)return t._asyncDataPromises[a];e.transform&&(r=e.transform(r)),e.pick&&(r=I(r,e.pick)),n.data.value=r,n.error.value=null}).catch(r=>{var f,x;if(o.cancelled)return t._asyncDataPromises[a];n.error.value=r,n.data.value=O((x=(f=e.default)==null?void 0:f.call(e))!=null?x:null)}).finally(()=>{o.cancelled||(n.pending.value=!1,t.payload.data[a]=n.data.value,n.error.value&&(t.payload._errors[a]=!0),delete t._asyncDataPromises[a])});return t._asyncDataPromises[a]=o,t._asyncDataPromises[a]};const y=()=>n.refresh({_initial:!0}),P=e.server!==!1&&t.payload.serverRendered;{const l=$();if(l&&!l._nuxtOnBeforeMountCbs){l._nuxtOnBeforeMountCbs=[];const r=l._nuxtOnBeforeMountCbs;l&&(N(()=>{r.forEach(f=>{f()}),r.splice(0,r.length)}),A(()=>r.splice(0,r.length)))}P&&t.isHydrating&&a in t.payload.data?n.pending.value=!1:l&&(t.payload.serverRendered&&t.isHydrating||e.lazy)&&e.immediate?l._nuxtOnBeforeMountCbs.push(y):e.immediate&&y(),e.watch&&T(e.watch,()=>n.refresh());const o=t.hook("app:data:refresh",r=>{if(!r||r.includes(a))return n.refresh()});l&&A(o)}const p=Promise.resolve(t._asyncDataPromises[a]).then(()=>n);return Object.assign(p,n),p}function I(i,s){const a={};for(const c of s)a[c]=i[c];return a}function K(i,s,a){const[c={},e]=typeof s=="string"?[{},s]:[s,a],t=c.key||e;if(!t||typeof t!="string")throw new TypeError("[nuxt] [useFetch] key must be a string: "+t);if(!i)throw new Error("[nuxt] [useFetch] request is missing.");const d="$f"+t,n=j(()=>{let o=i;return typeof o=="function"&&(o=o()),O(o)}),{server:y,lazy:P,default:p,transform:h,pick:_,watch:m,initialCache:v,immediate:D,...b}=c,w={...b,cache:typeof c.cache=="boolean"?void 0:c.cache},g={server:y,lazy:P,default:p,transform:h,pick:_,initialCache:v,immediate:D,watch:[n,...m||[]]};let u;return V(d,()=>{var o;return(o=u==null?void 0:u.abort)==null||o.call(u),u=typeof AbortController<"u"?new AbortController:{},$fetch(n.value,{signal:u.signal,...w})},g)}const U={__name:"Counter",setup(i){const s=k(1),a=()=>{s.value=s.value+1};return(c,e)=>(E(),z("button",{onClick:a},"Counter "+F(s.value),1))}},q=B("br",null,null,-1),X=B("br",null,null,-1),Y=B("br",null,null,-1),J={__name:"index",async setup(i){let s,a;const{data:c}=([s,a]=H(()=>K("https://gorest.co.in/public/v1/users","$PslAyef5YX")),s=await s,a(),s);return(e,t)=>(E(),z("div",null,[C(" ====== "),q,C(" Nuxt module playground! "),R(U),X,C(" "+F(O(c))+" ",1),Y,C(" ====== ")]))}};export{J as default};
